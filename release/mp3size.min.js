"use strict";function bitrateInBits(rate=160){return rate>=8?rate/8:20}function sizeInBits(size){return 8*size}function getDuration(time){try{if("string"==typeof time){const params=time.split(":"),count=params.length;if(2===count){return 60*(params[0]||0)+1*(params[1]||0)}if(3===count){return 3600*(params[0]||0)+60*(params[1]||0)+1*(params[2]||0)}return-1}return-1}catch(e){return-1}}function padNumber(value){return"number"!=typeof value?"":value<10?"0"+value:value+""}function getFileSize(time,rate=160){if("string"!=typeof time)return-1;const audioDuration=getDuration(time);return audioDuration>-1?audioDuration*bitrateInBits(rate):-1}function getAudioDuration(size,rate){if(!size||!rate||0===size||rate>size)return"-1";try{let audioDuration=sizeInBits(size)/rate;if(audioDuration>0){audioDuration=Math.round(audioDuration);const hours=padNumber(parseInt(audioDuration/3600));return hours+":"+padNumber(parseInt((audioDuration-3600*hours)/60))+":"+padNumber(parseInt(audioDuration%60))}return"00:00:00"}catch(e){return"-1"}}function getAudioBitrate(time,size){if("string"!=typeof time)return-1;const audioDuration=getDuration(time);if(!(audioDuration>-1))return-1;try{return Math.round(sizeInBits(size)/audioDuration)}catch(e){return-1}}